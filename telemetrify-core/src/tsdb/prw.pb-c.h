/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: prw.proto */

#ifndef PROTOBUF_C_prw_2eproto__INCLUDED
#define PROTOBUF_C_prw_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _WriteRequest WriteRequest;
typedef struct _TimeSeries TimeSeries;
typedef struct _Label Label;
typedef struct _Sample Sample;


/* --- enums --- */


/* --- messages --- */

struct  _WriteRequest
{
  ProtobufCMessage base;
  size_t n_timeseries;
  TimeSeries **timeseries;
};
#define WRITE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&write_request__descriptor) \
    , 0,NULL }


struct  _TimeSeries
{
  ProtobufCMessage base;
  size_t n_labels;
  Label **labels;
  size_t n_samples;
  Sample **samples;
};
#define TIME_SERIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&time_series__descriptor) \
    , 0,NULL, 0,NULL }


struct  _Label
{
  ProtobufCMessage base;
  char *name;
  char *value;
};
#define LABEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&label__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Sample
{
  ProtobufCMessage base;
  double value;
  int64_t timestamp;
};
#define SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sample__descriptor) \
    , 0, 0 }


/* WriteRequest methods */
void   write_request__init
                     (WriteRequest         *message);
size_t write_request__get_packed_size
                     (const WriteRequest   *message);
size_t write_request__pack
                     (const WriteRequest   *message,
                      uint8_t             *out);
size_t write_request__pack_to_buffer
                     (const WriteRequest   *message,
                      ProtobufCBuffer     *buffer);
WriteRequest *
       write_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   write_request__free_unpacked
                     (WriteRequest *message,
                      ProtobufCAllocator *allocator);
/* TimeSeries methods */
void   time_series__init
                     (TimeSeries         *message);
size_t time_series__get_packed_size
                     (const TimeSeries   *message);
size_t time_series__pack
                     (const TimeSeries   *message,
                      uint8_t             *out);
size_t time_series__pack_to_buffer
                     (const TimeSeries   *message,
                      ProtobufCBuffer     *buffer);
TimeSeries *
       time_series__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   time_series__free_unpacked
                     (TimeSeries *message,
                      ProtobufCAllocator *allocator);
/* Label methods */
void   label__init
                     (Label         *message);
size_t label__get_packed_size
                     (const Label   *message);
size_t label__pack
                     (const Label   *message,
                      uint8_t             *out);
size_t label__pack_to_buffer
                     (const Label   *message,
                      ProtobufCBuffer     *buffer);
Label *
       label__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   label__free_unpacked
                     (Label *message,
                      ProtobufCAllocator *allocator);
/* Sample methods */
void   sample__init
                     (Sample         *message);
size_t sample__get_packed_size
                     (const Sample   *message);
size_t sample__pack
                     (const Sample   *message,
                      uint8_t             *out);
size_t sample__pack_to_buffer
                     (const Sample   *message,
                      ProtobufCBuffer     *buffer);
Sample *
       sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sample__free_unpacked
                     (Sample *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*WriteRequest_Closure)
                 (const WriteRequest *message,
                  void *closure_data);
typedef void (*TimeSeries_Closure)
                 (const TimeSeries *message,
                  void *closure_data);
typedef void (*Label_Closure)
                 (const Label *message,
                  void *closure_data);
typedef void (*Sample_Closure)
                 (const Sample *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor write_request__descriptor;
extern const ProtobufCMessageDescriptor time_series__descriptor;
extern const ProtobufCMessageDescriptor label__descriptor;
extern const ProtobufCMessageDescriptor sample__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_prw_2eproto__INCLUDED */
